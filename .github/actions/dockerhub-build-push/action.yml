name: DockerHub Build and Push
description: Build and push Docker image to DockerHub
inputs:
  username:
    required: true
    description: "Docker Hub username"
  password:
    required: true
    description: "Docker Hub password"
  github-token:
    required: true
    description: "GitHub Access Token"
  image-name:
    required: true
    description: "Docker image name"
  image-tag:
    required: false
    description: "Docker image tag"
  dockerfile:
    required: false
    description: "Dockerfile path"
    default: ${{ github.workspace }}/Dockerfile
  build-context:
    required: false
    description: "Docker build context"
    default: ${{ github.workspace }}
  platforms:
    required: false
    description: "Docker build platforms"
    default: linux/amd64,linux/arm64
  push-latest:
    required: false
    description: "Push latest tag"
    default: "true"
runs:
  using: "composite"
  steps:
    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    - name: Set image tag
      shell: bash
      id: vars
      env:
        IMAGE_NAME: ${{ inputs.image-name }}
        IMAGE_TAG: ${{ inputs.image-tag }}
      run: |
        if [ ! -z "$IMAGE_TAG" ]; then
          TAGS="$IMAGE_NAME:$IMAGE_TAG"
        elif [[ "${GITHUB_REF_TYPE}" == "tag" && "${GITHUB_REF_NAME}" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          TAGS="$IMAGE_NAME:${GITHUB_REF_NAME}"
        elif [[ "${GITHUB_REF_NAME}" == "main" ]]; then
          TAGS="$IMAGE_NAME:latest"
        elif [[ "${GITHUB_REF_NAME}" == "development" ]]; then
          TAGS="$IMAGE_NAME:dev"
        else
          echo "No matching condition for build, skipping."
          exit 1
        fi
        if [ "${PUSH_LATEST}" = "true" ]; then
          TAGS="$TAGS,$IMAGE_NAME:latest"
        fi
        echo "tags=$TAGS" >> $GITHUB_OUTPUT

    - name: Set up QEMU and Buildx
      uses: docker/setup-buildx-action@v3

    - name: Create ephemeral .netrc for private module access
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github-token }}
        GITHUB_ACTOR: ${{ github.actor }}
      run: |
        echo -e "machine github.com\nlogin ${GITHUB_ACTOR}\npassword ${GITHUB_TOKEN}" > $HOME/.netrc
        chmod 600 $HOME/.netrc

    - name: Build and push with .netrc secret
      uses: docker/build-push-action@v6
      with:
        push: true
        platforms: ${{ inputs.platforms }}
        file: ${{ inputs.dockerfile }}
        context: ${{ inputs.build-context }}
        tags: ${{ steps.vars.outputs.tags }}
        secret-files: |
          netrc=/home/runner/.netrc
